{"method":"tools/call","params":{"name":"project_execute","arguments":{"projectId":"S000009result_1278407893","code":"# Test export di una singola collection (Zones) in CSV\nimport os\nresult = {}\ntry:\n    # Directory di output\n    project_path = visum.GetPath(1)\n    project_dir = os.path.dirname(project_path)\n    project_name = os.path.basename(project_path).replace('.ver', '')\n    \n    result['project_name'] = project_name\n    result['project_dir'] = project_dir\n    \n    # Prova ad esportare Zones come test\n    output_file = os.path.join(project_dir, f'{project_name}_Zones.att')\n    \n    # SaveAttributeFile syntax: visum.IO.SaveAttributeFile(FileName, NetObjectType, Separator, AttributeList)\n    # NetObjectType: 'ZONE', 'NODE', 'LINK', etc.\n    \n    try:\n        # Prova export Zones\n        visum.IO.SaveAttributeFile(\n            output_file,\n            'ZONE',\n            ';',  # separator\n            ['No', 'Name', 'Code', 'XCoord', 'YCoord']  # attributi base\n        )\n        result['zones_export'] = 'SUCCESS'\n        result['zones_file'] = output_file\n        result['file_exists'] = os.path.exists(output_file)\n        if os.path.exists(output_file):\n            result['file_size'] = os.path.getsize(output_file)\n    except Exception as e:\n        result['zones_export_error'] = str(e)\n        \nexcept Exception as e:\n    result['error'] = str(e)\nresult","description":"Test export singola tabella (Zones) in CSV"}},"jsonrpc":"2.0","id":15}