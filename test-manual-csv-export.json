{"method":"tools/call","params":{"name":"project_execute","arguments":{"projectId":"S000009result_1278407893","code":"# Esplora la signature di SaveAttributeFile\nimport os\nresult = {}\ntry:\n    # 1. Verifica help/doc di SaveAttributeFile\n    if hasattr(visum.IO, 'SaveAttributeFile'):\n        method = visum.IO.SaveAttributeFile\n        result['has_SaveAttributeFile'] = True\n        result['method_type'] = str(type(method))\n        \n    # 2. Prova approccio alternativo: usa GetMultipleAttributes per ottenere dati e poi salvali\n    # Prima ottieni i dati dalla collection\n    zones = visum.Net.Zones\n    zone_count = zones.Count\n    result['zone_count'] = zone_count\n    \n    # Prova a ottenere dati con GetMultipleAttributes\n    if zone_count > 0:\n        try:\n            # GetMultipleAttributes returns data\n            attrs = ['No', 'Name', 'Code']\n            data = zones.GetMultipleAttributes(attrs)\n            result['data_type'] = str(type(data))\n            result['data_length'] = len(data) if hasattr(data, '__len__') else 'N/A'\n            \n            # Se data Ã¨ una lista di liste\n            if isinstance(data, (list, tuple)) and len(data) > 0:\n                result['first_attr_length'] = len(data[0]) if hasattr(data[0], '__len__') else 'N/A'\n                result['sample_data'] = data[0][:3] if hasattr(data[0], '__getitem__') else str(data[0])\n        except Exception as e:\n            result['getmultipleattributes_error'] = str(e)\n            \n    # 3. Prova approccio con file CSV manuale\n    project_path = visum.GetPath(1)\n    project_dir = os.path.dirname(project_path)\n    project_name = os.path.basename(project_path).replace('.ver', '')\n    \n    csv_file = os.path.join(project_dir, f'{project_name}_Zones_manual.csv')\n    \n    # Scrivi CSV manualmente\n    try:\n        import csv\n        with open(csv_file, 'w', newline='', encoding='utf-8') as f:\n            writer = csv.writer(f, delimiter=';')\n            # Header\n            writer.writerow(['No', 'Name', 'Code'])\n            # Dati - prova solo prime 5 zone\n            for i in range(min(5, zone_count)):\n                zone = zones.ItemByKey(i+1)\n                row = [\n                    zone.AttValue('No'),\n                    zone.AttValue('Name'),\n                    zone.AttValue('Code')\n                ]\n                writer.writerow(row)\n        \n        result['manual_csv'] = 'SUCCESS'\n        result['csv_file'] = csv_file\n        result['file_exists'] = os.path.exists(csv_file)\n        if os.path.exists(csv_file):\n            result['file_size'] = os.path.getsize(csv_file)\n    except Exception as e:\n        result['manual_csv_error'] = str(e)\n        \nexcept Exception as e:\n    result['error'] = str(e)\nresult","description":"Esplora metodi alternativi per export CSV"}},"jsonrpc":"2.0","id":17}