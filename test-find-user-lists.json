{"method":"tools/call","params":{"name":"project_execute","arguments":{"projectId":"S000009result_1278407893","code":"# Cerca se esistono UserLists o TableDefinitions salvate\nresult = {}\ntry:\n    # 1. Verifica se esiste UserLists o simili\n    visum_attrs = [a for a in dir(visum) if not a.startswith('_')]\n    \n    # Cerca attributi con 'User' o 'Custom'\n    user_attrs = [a for a in visum_attrs if 'User' in a or 'Custom' in a or 'List' in a]\n    result['user_related_attrs'] = user_attrs\n    \n    # 2. Verifica se esiste TableDefinitions nel Global Layout\n    # Dopo aver caricato un layout, potrebbe contenere info sulle tabelle\n    \n    # 3. Cerca in Net per UserDefinedAttributes o simili\n    if hasattr(visum, 'Net'):\n        net = visum.Net\n        net_attrs = [a for a in dir(net) if 'User' in a or 'Defined' in a or 'Custom' in a]\n        result['net_user_attrs'] = net_attrs\n    \n    # 4. Verifica se esistono 'Lists' come oggetto\n    if hasattr(visum, 'Lists'):\n        result['has_Lists'] = True\n        lists = visum.Lists\n        lists_count = lists.Count if hasattr(lists, 'Count') else 'N/A'\n        result['lists_count'] = lists_count\n        \n        # Prova a ottenere le liste\n        if lists_count != 'N/A' and lists_count > 0:\n            try:\n                # Prova GetMultipleAttributes\n                list_attrs = lists.GetMultipleAttributes(['Name', 'NetObjectType'])\n                result['lists_data'] = list_attrs\n            except Exception as e:\n                result['lists_error'] = str(e)\n    else:\n        result['has_Lists'] = False\n    \n    # 5. Alternativa: cerca se esistono metodi per ottenere le window configurations\n    # Cerca metodi con 'Window' o 'View'\n    window_methods = [m for m in visum_attrs if 'Window' in m or 'View' in m or 'Display' in m]\n    result['window_view_methods'] = window_methods\n    \nexcept Exception as e:\n    result['error'] = str(e)\nresult","description":"Cerca UserLists o table definitions salvate"}},"jsonrpc":"2.0","id":19}